apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: unifi
  namespace: home
spec:
  chart:
    spec:
      # renovate: registryUrl=https://qonstrukt.github.io/helm-charts
      chart: unifi-controller
      version: 2.6.1
      sourceRef:
        kind: HelmRepository
        name: qonstrukt
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: unifi-controller
  values:
    image:
      repository: linuxserver/unifi-controller
      pullPolicy: IfNotPresent
      tag: 8.0.24

    replicaCount: 1

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    serviceAccount:
      create: true
      annotations: {}
      name: ""

    environment:
      timezone: "America/Los_Angeles"
      uid: 1000
      gid: 1000
      memLimit: 1920 # Keep this a little below the resource limits
      memStartup: 1024 # Set this rougly to the resource requests

    service:
      type: "NodePort"
      annotations:
        {}
        # traefik.ingress.kubernetes.io/service.serversscheme: https
      ports:
        devicecom: 8080
        webapi: 8443
        stun: 3478
      appDiscovery: false
      syslogCapture: false
      loadBalancerIP: ""

    ingress:
      enabled: true
      className: "traefik-cloud"
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
      hosts:
        - host: unifi.nickshores.net
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - unifi.speedport.ip

    # if set, use this persistant volume claim for the internal mongodb
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 8Gi
      ## database data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      storageClass: do-block-storage
      annotations: {}
      backup:
        enabled: true
        accessMode: ReadWriteOnce
        size: 8Gi
        ## database data Persistent Volume Storage Class
        ## If defined, storageClassName: <storageClass>
        ## If set to "-", storageClassName: "", which disables dynamic provisioning
        storageClass: do-block-storage
        annotations: {}

    podSecurityContext:
      {}
      # runAsUser: 999
      # fsGroup: 999

    securityContext: {}
    #  capabilities:
    #     drop:
    #     - ALL
    #  readOnlyRootFilesystem: false
    #  runAsNonRoot: true
    #  runAsUser: 999

    resources:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi

    nodeSelector:
      # Run in digital ocean
      location: "cloud"

    tolerations: []

    affinity: {}
