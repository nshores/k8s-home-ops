apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: frigate
  namespace: home
spec:
  chart:
    spec:
      # renovate: registryUrl=https://blakeblackshear.github.io/blakeshome-charts/
      chart: frigate
      version: 7.3.0
      sourceRef:
        kind: HelmRepository
        name: blakeblackshear
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: frigate
  values:
    image:
      # -- image repository
      repository: ghcr.io/blakeblackshear/frigate
      # -- image tag
      # @default -- chart.appVersion
      tag: 0.13.2
      # -- image pull policy
      pullPolicy: IfNotPresent

    # -- environment variables. See [docs](https://blakeblackshear.github.io/frigate/) for more details.
    # @default -- See below
    env:
      # -- Set the container timezone
      TZ: America/Los_Angeles
      # -- Set a RTSP password
      # @default -- empty
      FRIGATE_RTSP_PASSWORD: ""

    securityContext:
      # -- (bool) Privileged securityContext may be required if USB devices are accessed directly through the host machine
      privileged: false

      # -- Configure persistence settings for the chart under this key.
      # @default -- See values.yaml

      # -- Affinity constraint rules to place the Pod on a specific node.
      # [[ref]](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity)
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #             - key: kubernetes.io/hostname
      #               operator: In
      #               values:
      #                 - k3s-master-6

      # -- Configure the resource requests and/or limits for the Pod
      config: |
        mqtt:
          host: mosquitto
        cameras:
          front_door:
            ffmpeg:
              inputs:
                - path: rtsp://admin:4118nick@192.168.99.119:554/cam/realmonitor?channel=1&subtype=1
                  roles:
                    - detect
                - path: rtsp://admin:4118nick@192.168.99.119:554/cam/realmonitor?channel=1&subtype=0
                  roles:
                    - record
            detect:
              width: 640
              height: 480
              fps: 5
            snapshots:
              enabled: True
              required_zones:
                - porch
            record:
              enabled: True
              events:
                required_zones:
                  - porch
            rtmp:
              enabled: false
            motion:
              mask:
                - 519,480,640,480,640,480,640,480,640,90,640,0,518,0,525,276
                - 0,255,0,165,640,158,640,254
                - 0,236,640,230,640,0,0,0
            zones:
              porch:
                coordinates: 0,480,517,480,525,264,0,229
                objects:
                - person
        detectors:
          cpu1:
            type: cpu
        record:
          # Optional: Enable recording (default: shown below)
          enabled: True
          # Optional: Number of days to retain recordings regardless of events (default: shown below)
          # NOTE: This should be set to 0 and retention should be defined in events section below
          #       if you only want to retain recordings of events.
          retain_days: 0
          # Optional: Event recording settings
          events:
            # Optional: Maximum length of time to retain video during long events. (default: shown below)
            # NOTE: If an object is being tracked for longer than this amount of time, the retained recordings
            #       will be the last x seconds of the event unless retain_days under record is > 0.
            #max_seconds: 300
            # Optional: Number of seconds before the event to include (default: shown below)
            pre_capture: 5
            # Optional: Number of seconds after the event to include (default: shown below)
            post_capture: 5
            # Optional: Objects to save recordings for. (default: all tracked objects)
            objects:
              - person
            # Optional: Restrict recordings to objects that entered any of the listed zones (default: no required zones)
            required_zones: []
            # Optional: Retention settings for recordings of events
            retain:
              # Required: Default retention days (default: shown below)
              default: 10
              # Optional: Per object retention days
              objects:
                person: 15

  # Probes configuration
  probes:
    liveness:
      enabled: true
      initialDelaySeconds: 30
      failureThreshold: 5
      timeoutSeconds: 10
    readiness:
      enabled: true
      initialDelaySeconds: 30
      failureThreshold: 5
      timeoutSeconds: 10
    startup:
      enabled: false
      failureThreshold: 30
      periodSeconds: 10

  service:
    # -- Type of Service to use
    type: ClusterIP
    # -- Port the Service should communicate on
    port: 5000
    ## Specify the nodePort value for the LoadBalancer and NodePort service types.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    # nodePort:
    ## Provide any additional annotations which may be required. This can be used to
    ## set the LoadBalancer service type to internal only.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    annotations: {}
    labels: {}

    # -- Set specific IP address for LoadBalancer. `service.type` must be set to `LoadBalancer`
    loadBalancerIP:

    # loadBalancerSourceRanges: []
    ## Set the externalTrafficPolicy in the Service to either Cluster or Local
    # externalTrafficPolicy: Cluster

    # default IP family to use for the service
    ipFamilyPolicy: SingleStack
    # ipFamilies for service
    ipFamilies: []

  ingress:
    # -- Enables the use of an Ingress Controller to front the Service and can provide HTTPS
    enabled: true

    # -- annotations to configure your Ingress. See your Ingress Controller's Docs for more info.
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt

    # -- list of hosts and their paths that ingress controller should repsond to.
    hosts:
      - host: frigate.lab.nickshores.net
        paths:
          - "/"

    # -- list of TLS configurations
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  persistence:
    data:
      # Data directory is obsolete. Use config and media instead.
      enabled: false
      accessMode: ReadWriteOnce
      size: 10Gi
      skipuninstall: false

    config:
      # -- Enables persistence for the config directory
      enabled: true
      ## frigate data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass: "longhorn"
      ##
      ## If you want to reuse an existing claim, you can pass the name of the PVC using
      ## the existingClaim variable
      # existingClaim: your-claim
      # subPath: some-subpath

      # -- [access mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) to use for the PVC
      accessMode: ReadWriteOnce

      # -- size/capacity of the PVC
      size: 100Mi

      # -- Do not delete the pvc upon helm uninstall
      skipuninstall: false

    media:
      # -- Enables persistence for the media directory
      enabled: true
      ## frigate data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      ##
      ## If you want to reuse an existing claim, you can pass the name of the PVC using
      ## the existingClaim variable
      existingClaim: frigate-media
      # subPath: some-subpath

      # -- [access mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) to use for the PVC
      accessMode: ReadWriteOnce

      # -- size/capacity of the PVC
      size: 20Gi

      # -- Do not delete the pvc upon helm uninstall
      skipuninstall: false

  # -- Set resource limits/requests for the Pod(s)
  resources:
    limits:
      cpu: 0.5

    requests:
      cpu: 1.0

  # -- Set Security Context
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # privileged: true

  # -- Node Selector configuration
  nodeSelector: {}

  # -- Node toleration configuration
  tolerations: []

  # -- Set Pod affinity rules
  affinity: {}

  # -- Set additonal pod Annotations
  podAnnotations: {}
